{
    "task_number": 307,
    "task_name": "c8cbb738.json",
    "raw_data_path": "tasks_json/c8cbb738.json",
    "task_summary": {
        "test_input_size": "(19, 18)",
        "test_output_size": "(7, 7)",
        "example_input_sizes": "[(11, 12), (8, 10), (14, 12)]",
        "example_output_sizes": "[(5, 5), (3, 3), (5, 5)]",
        "number_of_examples": 3,
        "test_input_colors": "[0, 1, 1, 1, 0, 0, 1, 0, 1, 0]",
        "test_output_colors": "[0, 1, 1, 1, 0, 0, 1, 0, 1, 0]",
        "nyu_attempt": 0,
        "nyu_successful_1_try": 0,
        "nyu_successful_3_tries": 0
    },
    "description_summary": {
        "number_of_descriptions": 4,
        "average_confidence": 4.333333333333333,
        "verification_success_rate": 0.75,
        "average_verification_attempts": 1.5,
        "average_description_synthesis_time": 542.5,
        "average_verification_time": 126.75,
        "descriptions": [
            {
                "description_id": "2059629c-a311-49d8-9146-b3da9535c730",
                "user_id": "098f3fcb-8780-4b1e-a6ca-7e698a5bc626",
                "description_input": "In the input, you should see...a solid color background with (4) colored squares placed to make general shapes throughout the grid. Each different shape is represented by colored blocks and background blocks. The colored blocks are an outline to the shape, but not fully filled in.",
                "description_output_grid_size": "The output grid size...changes to match the amount of squares used to make up the largest shape within the input grid. So, if there are three different shapes outlined and the largest is a 4x4 square, then the output grid would be 4x4 in size.",
                "description_output": "To make the output, you have to...reduce the grid to match the size of the largest outline shape. Then overlay the different colored squares on top of the colored background. So if there is a dark blue background and you see an outline of (4) orange squares that make a square outline and four red squares that make a red cross, then you would put the orange squares at the corners of the output grid, and place the red cross in that shape between the orange, and the center square would be a dark blue square.",
                "is_verified": true,
                "confidence": 2,
                "num_verification_attempts": 1,
                "generation": 1,
                "user_num_prior_description_experiences": 1,
                "user_num_prior_build_experiences": 1,
                "description_synthesis_time": 486.0,
                "verification_time": 68.0
            },
            {
                "description_id": "24acbaed-fa77-46a5-8c69-596dfe9c71b0",
                "user_id": "9c450c73-05eb-4749-b399-8b62fcf4a090",
                "description_input": "In the input, you should see...Complete primary color fill. Square and Cross patterns same color with holes filled primary color. Solid Blue, Yellow, or green background. Blue square and Orange cross.",
                "description_output_grid_size": "The output grid size...The Grid size changes 5x5. for the first two and 3x3 for the last.",
                "description_output": "To make the output, you have to...Color fill on corners and middle squares. Solid blue corners. Green cross and blue fill.",
                "is_verified": false,
                "confidence": 0,
                "num_verification_attempts": 3,
                "generation": 0,
                "user_num_prior_description_experiences": 2,
                "user_num_prior_build_experiences": 0,
                "description_synthesis_time": 335.0,
                "verification_time": 129.0
            },
            {
                "description_id": "d1491214-837a-418c-8527-2a8310477bc7",
                "user_id": "24d42a42-ea96-49b6-b1be-3a395f8b787e",
                "description_input": "In the input, you should see...different colored blocks, with each color making a pattern, on top of some other color which can change from input to input.",
                "description_output_grid_size": "The output grid size...is different depending on the space between the number of blocks in the input patterns. The width would be the number of blocks for the pattern with the most space between them. Same goes for the height. If there is a pattern with 3 blocks between it, that would make it 5, as you want to include the blocks of the pattern.",
                "description_output": "To make the output, you have to...What you want to do is combine all the shapes so the blocks of the patterns will be the outside of the result. Start with the pattern that has the most space between it. Copy it over so it should be the corners of the result. Then go to the next smallest pattern, copy it over, which should fill in spaces that were not already filled. Continue doing this to add all the patterns to the result. The background should stay the same in both.",
                "is_verified": true,
                "confidence": 3,
                "num_verification_attempts": 1,
                "generation": 3,
                "user_num_prior_description_experiences": 2,
                "user_num_prior_build_experiences": 3,
                "description_synthesis_time": 786.0,
                "verification_time": 165.0
            },
            {
                "description_id": "eba0cc32-a21d-459a-861e-2770043e1278",
                "user_id": "9fa0a276-8856-4cea-a3fd-83cbce995832",
                "description_input": "In the input, you should see...a solid color background with multiple groups of 4 colored pixels.",
                "description_output_grid_size": "The output grid size...is going to be smaller than the original. It will be the same size as the largest shape created by the groups of colored pixels.",
                "description_output": "To make the output, you have to...place all the groups of pixels on top of each other keeping all colors the same. Leave any left over blocks the color of the original background.",
                "is_verified": true,
                "confidence": 8,
                "num_verification_attempts": 1,
                "generation": 2,
                "user_num_prior_description_experiences": 1,
                "user_num_prior_build_experiences": 1,
                "description_synthesis_time": 563.0,
                "verification_time": 145.0
            }
        ]
    },
    "annotated_phrases": [
        {
            "phrase_number": 1827,
            "phrase_kind": "input",
            "nth_phrase_in_paragraph": 1,
            "phrase": "a solid color background with multiple groups of 4 colored pixels.",
            "tag_procedure": 0,
            "tag_metaphor": 0,
            "tag_clarification": 0,
            "tag_example": 0,
            "tag_array": 0,
            "tag_validation": 0,
            "tag_loop": 0,
            "tag_start_stop": 0,
            "tag_conditional": 0,
            "tag_logic": 0,
            "tag_framing": 0,
            "tag_spatial_relation": 0,
            "tag_physical_interaction": 0,
            "tag_contact_transform": 0,
            "tag_affine_transform": 0,
            "tag_visual_graphical_transform": 0,
            "tag_object_detection": 0
        },
        {
            "phrase_number": 1828,
            "phrase_kind": "grid_size",
            "nth_phrase_in_paragraph": 1,
            "phrase": "is going to be smaller than the original.",
            "tag_procedure": 0,
            "tag_metaphor": 0,
            "tag_clarification": 0,
            "tag_example": 0,
            "tag_array": 0,
            "tag_validation": 0,
            "tag_loop": 0,
            "tag_start_stop": 0,
            "tag_conditional": 0,
            "tag_logic": 0,
            "tag_framing": 0,
            "tag_spatial_relation": 0,
            "tag_physical_interaction": 0,
            "tag_contact_transform": 0,
            "tag_affine_transform": 0,
            "tag_visual_graphical_transform": 0,
            "tag_object_detection": 0
        },
        {
            "phrase_number": 1829,
            "phrase_kind": "grid_size",
            "nth_phrase_in_paragraph": 2,
            "phrase": "It will be the same size as the largest shape created by the groups of colored pixels.",
            "tag_procedure": 0,
            "tag_metaphor": 0,
            "tag_clarification": 0,
            "tag_example": 0,
            "tag_array": 0,
            "tag_validation": 0,
            "tag_loop": 0,
            "tag_start_stop": 0,
            "tag_conditional": 0,
            "tag_logic": 0,
            "tag_framing": 0,
            "tag_spatial_relation": 0,
            "tag_physical_interaction": 0,
            "tag_contact_transform": 0,
            "tag_affine_transform": 0,
            "tag_visual_graphical_transform": 0,
            "tag_object_detection": 0
        },
        {
            "phrase_number": 1830,
            "phrase_kind": "output",
            "nth_phrase_in_paragraph": 1,
            "phrase": "place all the groups of pixels on top of each other keeping all colors the same.",
            "tag_procedure": 0,
            "tag_metaphor": 0,
            "tag_clarification": 0,
            "tag_example": 0,
            "tag_array": 0,
            "tag_validation": 0,
            "tag_loop": 0,
            "tag_start_stop": 0,
            "tag_conditional": 0,
            "tag_logic": 0,
            "tag_framing": 0,
            "tag_spatial_relation": 0,
            "tag_physical_interaction": 0,
            "tag_contact_transform": 0,
            "tag_affine_transform": 0,
            "tag_visual_graphical_transform": 0,
            "tag_object_detection": 0
        },
        {
            "phrase_number": 1831,
            "phrase_kind": "output",
            "nth_phrase_in_paragraph": 2,
            "phrase": "Leave any left over blocks the color of the original background.",
            "tag_procedure": 0,
            "tag_metaphor": 0,
            "tag_clarification": 0,
            "tag_example": 0,
            "tag_array": 0,
            "tag_validation": 0,
            "tag_loop": 0,
            "tag_start_stop": 0,
            "tag_conditional": 0,
            "tag_logic": 0,
            "tag_framing": 0,
            "tag_spatial_relation": 0,
            "tag_physical_interaction": 0,
            "tag_contact_transform": 0,
            "tag_affine_transform": 0,
            "tag_visual_graphical_transform": 0,
            "tag_object_detection": 0
        }
    ]
}